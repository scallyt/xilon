// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: users.sql

package repository

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createWebhookUser = `-- name: CreateWebhookUser :exec
INSERT INTO users ( id, first_name, last_name, email, phone_number,profile_image_url, created_at, updated_at, external_id ) VALUES ( $1, $2, $3, $4, $5, $6, $7, $8, $9)
`

type CreateWebhookUserParams struct {
	ID              string           `json:"id"`
	FirstName       string           `json:"first_name"`
	LastName        string           `json:"last_name"`
	Email           string           `json:"email"`
	PhoneNumber     pgtype.Text      `json:"phone_number"`
	ProfileImageUrl pgtype.Text      `json:"profile_image_url"`
	CreatedAt       pgtype.Timestamp `json:"created_at"`
	UpdatedAt       pgtype.Timestamp `json:"updated_at"`
	ExternalID      pgtype.Text      `json:"external_id"`
}

func (q *Queries) CreateWebhookUser(ctx context.Context, arg CreateWebhookUserParams) error {
	_, err := q.db.Exec(ctx, createWebhookUser,
		arg.ID,
		arg.FirstName,
		arg.LastName,
		arg.Email,
		arg.PhoneNumber,
		arg.ProfileImageUrl,
		arg.CreatedAt,
		arg.UpdatedAt,
		arg.ExternalID,
	)
	return err
}

const deleteWebhookUser = `-- name: DeleteWebhookUser :exec
DELETE FROM users WHERE id = $1
`

func (q *Queries) DeleteWebhookUser(ctx context.Context, id string) error {
	_, err := q.db.Exec(ctx, deleteWebhookUser, id)
	return err
}
